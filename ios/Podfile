# ios/Podfile

platform :ios, '15.5'
use_frameworks! :linkage => :static
use_modular_headers!

# ---- BEGIN: robust Flutter path fix ----
flutter_bin = ENV['FLUTTER_BIN'] || `which flutter`.strip
flutter_root =
  if ENV['FLUTTER_ROOT'] && !ENV['FLUTTER_ROOT'].empty?
    ENV['FLUTTER_ROOT']
  elsif !flutter_bin.empty?
    File.expand_path('..', flutter_bin) # .../flutter/bin -> .../flutter
  else
    # Codemagic default install location
    File.expand_path('~/programs/flutter')
  end

require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'))
# ---- END: robust Flutter path fix ----

flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  # Pods that need C++17 under Xcode 16
  cpp17_targets = [
    'gRPC', 'gRPC-Core', 'gRPC-C++', 'gRPC-ProtoRPC',
    'abseil', 'Abseil', 'absl', 'Protobuf'
  ]

  installer.pods_project.targets.each do |target|
    # Force your deployment target
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.5'
    end

    # Keep Flutter's additional settings (safe-guarded)
    begin
      flutter_additional_ios_build_settings(target)
    rescue
    end

    # ---- BEGIN: Strip unsupported '-G...' flags from any BoringSSL target ----
    if target.name.include?('BoringSSL')
      # Clean per-file compiler flags
      target.source_build_phase.files.each do |file|
        s = file.settings
        next unless s && s['COMPILER_FLAGS']
        flags = s['COMPILER_FLAGS'].is_a?(String) ? s['COMPILER_FLAGS'].split : Array(s['COMPILER_FLAGS'])
        flags.reject! { |f| f.start_with?('-G') } # remove -G* flags
        s['COMPILER_FLAGS'] = flags.join(' ')
      end
      # Clean target-wide flags just in case
      target.build_configurations.each do |config|
        %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS].each do |key|
          next unless config.build_settings[key]
          flags = config.build_settings[key]
          flags = flags.split if flags.is_a?(String)
          flags = Array(flags).reject { |f| f.start_with?('-G') }
          config.build_settings[key] = flags
        end
      end
      puts ">> Patched flags for #{target.name}"
    end
    # ---- END: Strip unsupported '-G...' flags from any BoringSSL target ----

    # ---- BEGIN: Enforce C++17 for gRPC/Abseil/Protobuf ----
    if cpp17_targets.any? { |name| target.name.include?(name) }
      target.build_configurations.each do |config|
        # Language standards
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
        config.build_settings['GCC_C_LANGUAGE_STANDARD']   = 'gnu11'

        # Ensure -std=gnu++17 is present in C++ flags
        flags = config.build_settings['OTHER_CPLUSPLUSFLAGS']
        flags = flags.split if flags.is_a?(String)
        flags = Array(flags)
        flags << '-std=gnu++17' unless flags.include?('-std=gnu++17')
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = flags
      end
      puts ">> Enforced C++17 for #{target.name}"
    end
    # ---- END: Enforce C++17 for gRPC/Abseil/Protobuf ----
  end
end
