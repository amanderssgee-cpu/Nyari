platform :ios, '16.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

install! 'cocoapods', :warn_for_multiple_pod_sources => false

# Flutter integration
flutter_bin = %x(which flutter).strip
flutter_root = File.expand_path('..', File.dirname(File.realpath(flutter_bin)))
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
flutter_ios_podfile_setup

target 'Runner' do
  # Build Swift/C/ObjC pods as static frameworks (generates -Swift.h)
  use_frameworks! :linkage => :static

  # Make ObjC-only deps expose modules
  use_modular_headers!

  # gRPC toolchain as modules (avoids modulemap errors)
  pod 'gRPC-C++',       :modular_headers => true
  pod 'gRPC-Core',      :modular_headers => true
  pod 'gRPC-ProtoRPC',  :modular_headers => true
  pod 'BoringSSL-GRPC', :modular_headers => true

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    begin
      flutter_additional_ios_build_settings(t)
    rescue
    end

    t.build_configurations.each do |config|
      s = config.build_settings
      # iOS 16 baseline; exclude arm64 on iOS Simulator
      s['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      s['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'

      # Framework-style behaviors so Firebase umbrella imports -Swift.h cleanly
      s['DEFINES_MODULE'] = 'YES'
      s['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'

      # Keep this OFF with static frameworks.
      s['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
    end
  end
end
