# ----- Write final Podfile content (UTF-8 without BOM) -----
$pod = @'
platform :ios, '15.5'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', { 'Debug' => :debug, 'Profile' => :release, 'Release' => :release }

install! 'cocoapods', :warn_for_unused_master_specs_repo => false

def flutter_root
  generated = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  raise "Run `flutter pub get` first." unless File.exist?(generated)
  File.foreach(generated) { |line| return $1.strip if line =~ /FLUTTER_ROOT=(.*)/ }
  raise "FLUTTER_ROOT not found in Generated.xcconfig"
end

require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'), __FILE__)

# Generate module maps for non-modular pods so Swift static pods integrate cleanly.
use_modular_headers!

flutter_ios_podfile_setup

target 'Runner' do
  # Keep default static linkage for Flutter pods (do not add `use_frameworks!`).
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.5'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
'@

# Write without BOM
$utf8NoBom = New-Object System.Text.UTF8Encoding($false)
[IO.File]::WriteAllText("ios\Podfile", $pod, $utf8NoBom)

# Sanity: show any leftover conflict markers (should be none)
Select-String -Path "ios\Podfile" -Pattern '^[<>=]{7}' -Encoding UTF8 -List | ForEach-Object { $_.Line } | Write-Host
