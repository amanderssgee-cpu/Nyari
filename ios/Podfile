# ios/Podfile

platform :ios, '15.5'

# ❌ Do NOT add: use_frameworks! or use_modular_headers! here

# ---- Flutter helper wiring ----
flutter_bin = ENV['FLUTTER_BIN'] || `which flutter`.strip
flutter_root =
  if ENV['FLUTTER_ROOT'] && !ENV['FLUTTER_ROOT'].empty?
    ENV['FLUTTER_ROOT']
  elsif !flutter_bin.empty?
    File.expand_path('..', flutter_bin)
  else
    File.expand_path('~/programs/flutter') # Codemagic default
  end

require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'))

flutter_ios_podfile_setup

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |bc|
      bc.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.5'
      bc.build_settings['GCC_C_LANGUAGE_STANDARD']     = 'gnu11'
      bc.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
      # If (and only if) you STILL see a header error after this change,
      # uncomment the next line, rebuild once, then remove it:
      # bc.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
  end

  begin
    __apply_Xcode_12_5_M1_post_install(installer)
  rescue
  end
end
