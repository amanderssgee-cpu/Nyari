platform :ios, '16.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

install! 'cocoapods', :warn_for_multiple_pod_sources => false

# Flutter integration
flutter_bin  = %x(which flutter).strip
flutter_root = File.expand_path('..', File.dirname(File.realpath(flutter_bin)))
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
flutter_ios_podfile_setup

target 'Runner' do
  # IMPORTANT:
  #  - Do NOT call `use_frameworks!` (we want static libs, not frameworks)
  #  - Do NOT call `use_modular_headers!` globally

  # Only gRPC toolchain needs modular headers (modulemap). Everything else stays default.
  pod 'gRPC-C++',       :modular_headers => true
  pod 'gRPC-Core',      :modular_headers => true
  pod 'gRPC-ProtoRPC',  :modular_headers => true
  pod 'BoringSSL-GRPC', :modular_headers => true

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    flutter_additional_ios_build_settings(t) rescue nil

    t.build_configurations.each do |config|
      s = config.build_settings
      s['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      s['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'

      # Enforce STATIC LIB behavior: do NOT build pods as modules/frameworks
      s['DEFINES_MODULE'] = 'NO'
      s['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      s.delete('CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES')
      s.delete('MODULEMAP_FILE') if s['MODULEMAP_FILE']
    end
  end
end
