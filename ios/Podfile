source 'https://cdn.cocoapods.org/'

platform :ios, '15.5'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

install! 'cocoapods', :warn_for_unused_master_specs_repo => false

def flutter_root
  generated = File.expand_path(File.join('..','Flutter','Generated.xcconfig'), __FILE__)
  raise 'Run `flutter pub get` first.' unless File.exist?(generated)
  File.foreach(generated) do |line|
    m = line.match(/FLUTTER_ROOT=(.*)/)
    return m[1].strip if m
  end
  raise 'FLUTTER_ROOT not found in Generated.xcconfig'
end

require File.expand_path(File.join(flutter_root,'packages','flutter_tools','bin','podhelper'), __FILE__)

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Make ONLY the Firebase/Interop pods modular (Swift needs modules).
  pod 'FirebaseAuth',              :modular_headers => true
  pod 'FirebaseCore',              :modular_headers => true
  pod 'FirebaseCoreInternal',      :modular_headers => true
  pod 'FirebaseCoreExtension',     :modular_headers => true
  pod 'FirebaseFirestore',         :modular_headers => true
  pod 'FirebaseStorage',           :modular_headers => true
  pod 'GoogleUtilities',           :modular_headers => true
  pod 'FirebaseAppCheckInterop',   :modular_headers => true
  pod 'FirebaseAuthInterop',       :modular_headers => true
  pod 'RecaptchaInterop',          :modular_headers => true
end

post_install do |installer|
  # Shim for older Flutter podhelper that expects installer.platform_name
  unless installer.respond_to?(:platform_name)
    module Pod
      class Installer
        def platform_name
          (aggregate_targets.first&.platform&.name || :ios)
        end
      end
    end
  end

  # Support both old and new flutter_additional_ios_build_settings signatures
  if defined?(flutter_additional_ios_build_settings)
    begin
      flutter_additional_ios_build_settings(installer) # newer Flutter
    rescue ArgumentError, NoMethodError
      installer.pods_project.targets.each do |t|       # older Flutter
        flutter_additional_ios_build_settings(t)
      end
    end
  end

  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.5'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      # Be permissive with some older headers (avoids module import nits)
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
  end
end
